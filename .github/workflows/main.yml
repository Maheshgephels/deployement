name: Deploy to cPanel

on:
  push:
    branches:
      - main

jobs:
  admin:
    name: Admin Module Deployment 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      # Set up SSH with New Key
      - name: Set up SSH with New Key
        run: |
          set -e
          mkdir -p ~/.ssh
          echo "${{ secrets.CPANEL_SSH_PRIVATE_KEY }}" > ~/.ssh/consoft_ssh_new
          chmod 600 ~/.ssh/consoft_ssh_new
          ssh-keyscan -H ${{ secrets.CPANEL_HOST }} >> ~/.ssh/known_hosts
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/consoft_ssh_new  # No passphrase needed now

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -v -i ~/.ssh/consoft_ssh_new ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }} "echo 'Connection successful'"

      - name: Check for Frontend Changes
        id: check_frontend_changes
        run: |
          frontend_changes=$(git diff --name-only HEAD~1 HEAD -- frontend)
          if [ -n "$frontend_changes" ]; then
            echo "frontend_changes=$frontend_changes" >> $GITHUB_ENV
          fi

      - name: Build Frontend
        if: env.frontend_changes != ''
        run: |
          cd frontend
          CI=false npm install
          CI=false npm run build

      - name: Deploy Frontend
        if: env.frontend_changes != ''
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/consoft_ssh_new ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }} "mkdir -p /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/admin/" && \
          rsync -avz -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/consoft_ssh_new" ./frontend/build/ ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }}:/home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/admin/

      # - name: Update .htaccess for Correct RewriteBase
      #   run: |
      #     # Modify the .htaccess file to change RewriteBase from /admin to /
      #     sed -i 's|RewriteBase /admin|RewriteBase /|g' /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/admin/.htaccess
      #     sed -i 's|RewriteRule . /admin/index.html [L]|RewriteRule . /index.html [L]|g' /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/admin/.htaccess

  user:
    name: User Module Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      # Set up SSH with New Key
      - name: Set up SSH with New Key
        run: |
          set -e
          mkdir -p ~/.ssh
          echo "${{ secrets.CPANEL_SSH_PRIVATE_KEY }}" > ~/.ssh/consoft_ssh_new
          chmod 600 ~/.ssh/consoft_ssh_new
          ssh-keyscan -H ${{ secrets.CPANEL_HOST }} >> ~/.ssh/known_hosts
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/consoft_ssh_new  # No passphrase needed now

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -v -i ~/.ssh/consoft_ssh_new ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }} "echo 'Connection successful'"

      - name: Check for User Module Changes
        id: check_user_changes
        run: |
          user_changes=$(git diff --name-only HEAD~1 HEAD -- user)
          if [ -n "$user_changes" ]; then
            echo "user_changes=$user_changes" >> $GITHUB_ENV
          fi

      - name: Build User Module
        if: env.user_changes != ''
        run: |
          cd user
          CI=false npm install
          CI=false npm run build

      - name: Deploy User Module
        if: env.user_changes != ''
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/consoft_ssh_new ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }} "mkdir -p /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/user/" && \
          rsync -avz -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/consoft_ssh_new" ./user/build/ ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }}:/home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/user/

      # - name: Update .htaccess for Correct RewriteBase
      #   run: |
      #     # Modify the .htaccess file to change RewriteBase from /user to /
      #     sed -i 's|RewriteBase /user|RewriteBase /|g' /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/user/.htaccess
      #     sed -i 's|RewriteRule . /user/index.html [L]|RewriteRule . /index.html [L]|g' /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/user/.htaccess

  backend:
    name: Backend Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set up SSH with New Key
        run: |
          set -e
          mkdir -p ~/.ssh
          echo "${{ secrets.CPANEL_SSH_PRIVATE_KEY }}" > ~/.ssh/consoft_ssh_new
          chmod 600 ~/.ssh/consoft_ssh_new
          ssh-keyscan -H ${{ secrets.CPANEL_HOST }} >> ~/.ssh/known_hosts

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -v -i ~/.ssh/consoft_ssh_new ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }} "echo 'Connection successful'"

      - name: Verify Backend Directory 
        run: |
          echo "Checking if backend directory exists..."
          ls -al backend

      - name: Deploy Backend to Root Directory
        run: |
          rsync -avz \
            -e "ssh -i ~/.ssh/consoft_ssh_new -o StrictHostKeyChecking=no" \
            --update \
            --checksum \
            --exclude '.git/' \
            --exclude 'node_modules/' \
            --dirs \
            backend/ \
            ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }}:/home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/
        
      # - name: Deploy Backend to Root Directory
      #   run: |
      #     rsync -avz \
      #       -e "ssh -i ~/.ssh/consoft_ssh_new -o StrictHostKeyChecking=no" \
      #       --exclude '.git/' \
      #       --exclude 'node_modules/' \
      #       backend/ \
      #       ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }}:/home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/
        

      - name: Restart Node.js Application
        run: |
          ssh -i ~/.ssh/consoft_ssh_new ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }} << 'EOF'
            set -e
            echo "Activating Node.js virtual environment..."
            source /home/${{ secrets.CPANEL_USERNAME }}/nodevenv/${{ secrets.CPANEL_FOLDER_NAME }}/20/bin/activate
            cd /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}

            # If package.json has changed, install dependencies and restart
            if rsync --dry-run --update backend/package.json /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/ | grep -q "package.json"; then
              echo "Changes detected in package.json. Stopping the application..."
              cloudlinux-selector stop --json --interpreter nodejs --user ${{ secrets.CPANEL_USERNAME }} --app-root /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}
              echo "Application stopped."

              echo "Running npm install..."
              npm install
              echo "npm install completed."

              echo "Starting the application..."
              cloudlinux-selector start --json --interpreter nodejs --user ${{ secrets.CPANEL_USERNAME }} --app-root /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}
              echo "Application started."
            else
              echo "No changes in package.json. Restarting the application..."
              cloudlinux-selector restart --json --interpreter nodejs --user ${{ secrets.CPANEL_USERNAME }} --app-root /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}
              echo "Application restarted."
            fi
          EOF
