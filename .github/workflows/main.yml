name: Deploy via SSH

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 2  # Fetch 2 commits (previous commit and current commit)

    # Set up SSH with New Key
    - name: Set up SSH with New Key
      run: |
        set -e
        mkdir -p ~/.ssh
        echo "${{ secrets.CPANEL_SSH_PRIVATE_KEY }}" > ~/.ssh/consoft_ssh_new
        chmod 600 ~/.ssh/consoft_ssh_new
        ssh-keyscan -H s1346.use1.mysecurecloudhost.com >> ~/.ssh/known_hosts
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/consoft_ssh_new  # No passphrase needed now

    # Test SSH Connection
    - name: Test SSH Connection
      run: |
        ssh -v -i ~/.ssh/consoft_ssh_new allevent@s1346.use1.mysecurecloudhost.com "echo 'Connection successful'"

    # Check for Frontend Changes
    - name: Check for Frontend Changes
      id: check_frontend_changes
      run: |
        git diff --quiet HEAD~1 HEAD -- frontend || echo "Frontend changes detected"
        echo "frontend_changes=$(git diff --name-only HEAD~1 HEAD -- frontend)" >> $GITHUB_ENV
      continue-on-error: true

    # Build Frontend if changes are detected
    - name: Build Frontend
      if: env.frontend_changes != ''
      run: |
        cd frontend
        CI=false npm install  # Install frontend dependencies with CI mode off
        CI=false npm run build  # Build the frontend app with CI mode off

    # Deploy Frontend if changes are detected
    - name: Deploy Frontend via SSH
      if: env.frontend_changes != ''
      run: |
        scp -v -i ~/.ssh/consoft_ssh_new -r ./frontend/build/* allevent@s1346.use1.mysecurecloudhost.com:/home/allevent/reacttest.gephelssystems.com/frontend/

    # Check for Backend Changes
    - name: Check for Backend Changes
      id: check_backend_changes
      run: |
        git diff --quiet HEAD~1 HEAD -- backend || echo "Backend changes detected"
        echo "backend_changes=$(git diff --name-only HEAD~1 HEAD -- backend)" >> $GITHUB_ENV
      continue-on-error: true

    # Install Backend Dependencies if changes are detected
    - name: Install Backend Dependencies
      if: env.backend_changes != ''
      run: |
        cd backend
        CI=false ssh -i ~/.ssh/consoft_ssh_new allevent@s1346.use1.mysecurecloudhost.com "
          cd /home/allevent/reacttest.gephelssystems.com && 
          # Install Node.js and npm if not installed, only on Debian-based systems
          if ! command -v node &>/dev/null; then
            if [ -f /etc/debian_version ]; then
              curl -sL https://deb.nodesource.com/setup_20.x | bash - && apt-get install -y nodejs
            else
              echo 'This script is not supported on non-Debian systems. Please install Node.js manually.'
            fi
          fi &&
          npm install
        "


    # Deploy Backend if changes are detected
    - name: Deploy Backend via SSH
      if: env.backend_changes != ''
      run: |
        scp -v -i ~/.ssh/consoft_ssh_new -r ./backend/* allevent@s1346.use1.mysecurecloudhost.com:/home/allevent/reacttest.gephelssystems.com/

    # Restart Node.js Application if backend changes are detected
    - name: Restart Node.js Application
      if: env.backend_changes != ''
      run: |
        ssh -i ~/.ssh/consoft_ssh_new allevent@s1346.use1.mysecurecloudhost.com "cd /home/allevent/reacttest.gephelssystems.com && pm2 restart all"  # Assuming PM2 is being used to manage the Node.js app
