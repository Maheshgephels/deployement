name: Deploy to cPanel

on:
  push:
    branches:
      - main

jobs:
  admin:
    name: Admin Module Deployment 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      # Set up SSH with New Key
      - name: Set up SSH with New Key
        run: |
          set -e
          mkdir -p ~/.ssh
          echo "${{ secrets.CPANEL_SSH_PRIVATE_KEY }}" > ~/.ssh/consoft_ssh_new
          chmod 600 ~/.ssh/consoft_ssh_new
          ssh-keyscan -H ${{ secrets.CPANEL_HOST }} >> ~/.ssh/known_hosts
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/consoft_ssh_new  # No passphrase needed now

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -v -i ~/.ssh/consoft_ssh_new ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }} "echo 'Connection successful'"

      - name: Check for Frontend Changes
        id: check_frontend_changes
        run: |
          frontend_changes=$(git diff --name-only HEAD~1 HEAD -- frontend)
          if [ -n "$frontend_changes" ]; then
            echo "frontend_changes=$frontend_changes" >> $GITHUB_ENV
          fi

      - name: Build Frontend
        if: env.frontend_changes != ''
        run: |
          cd frontend
          CI=false npm install
          CI=false npm run build

      - name: Deploy Frontend
        if: env.frontend_changes != ''
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/consoft_ssh_new ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }} "mkdir -p /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/admin/" && \
          rsync -avz -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/consoft_ssh_new" ./frontend/build/ ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }}:/home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/admin/

      # - name: Update .htaccess for Correct RewriteBase
      #   run: |
      #     # Modify the .htaccess file to change RewriteBase from /admin to /
      #     sed -i 's|RewriteBase /admin|RewriteBase /|g' /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/admin/.htaccess
      #     sed -i 's|RewriteRule . /admin/index.html [L]|RewriteRule . /index.html [L]|g' /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/admin/.htaccess

  user:
    name: User Module Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      # Set up SSH with New Key
      - name: Set up SSH with New Key
        run: |
          set -e
          mkdir -p ~/.ssh
          echo "${{ secrets.CPANEL_SSH_PRIVATE_KEY }}" > ~/.ssh/consoft_ssh_new
          chmod 600 ~/.ssh/consoft_ssh_new
          ssh-keyscan -H ${{ secrets.CPANEL_HOST }} >> ~/.ssh/known_hosts
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/consoft_ssh_new  # No passphrase needed now

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -v -i ~/.ssh/consoft_ssh_new ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }} "echo 'Connection successful'"

      - name: Check for User Module Changes
        id: check_user_changes
        run: |
          user_changes=$(git diff --name-only HEAD~1 HEAD -- user)
          if [ -n "$user_changes" ]; then
            echo "user_changes=$user_changes" >> $GITHUB_ENV
          fi

      - name: Build User Module
        if: env.user_changes != ''
        run: |
          cd user
          CI=false npm install
          CI=false npm run build

      - name: Deploy User Module
        if: env.user_changes != ''
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/consoft_ssh_new ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }} "mkdir -p /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/user/" && \
          rsync -avz -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/consoft_ssh_new" ./user/build/ ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }}:/home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/user/

      # - name: Update .htaccess for Correct RewriteBase
      #   run: |
      #     # Modify the .htaccess file to change RewriteBase from /user to /
      #     sed -i 's|RewriteBase /user|RewriteBase /|g' /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/user/.htaccess
      #     sed -i 's|RewriteRule . /user/index.html [L]|RewriteRule . /index.html [L]|g' /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/user/.htaccess

  backend:
    name: Backend Deployment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set up SSH with New Key
        run: |
          set -e
          mkdir -p ~/.ssh
          echo "${{ secrets.CPANEL_SSH_PRIVATE_KEY }}" > ~/.ssh/consoft_ssh_new
          chmod 600 ~/.ssh/consoft_ssh_new
          ssh-keyscan -H ${{ secrets.CPANEL_HOST }} >> ~/.ssh/known_hosts
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/consoft_ssh_new

      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no -v -i ~/.ssh/consoft_ssh_new ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }} "echo 'Connection successful'"

      - name: Fetch Server File List
        id: fetch_server_files
        run: |
          ssh -i ~/.ssh/consoft_ssh_new ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }} << 'EOF'
          cd /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}
          find . -type f -exec stat --format='%n %Y' {} \; > /tmp/server_file_list.txt
          EOF
          scp -i ~/.ssh/consoft_ssh_new ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }}:/tmp/server_file_list.txt ./server_file_list.txt

      - name: Compare Files and Prepare Upload List
        id: compare_files
        run: |
          git_files=$(find backend -type f -exec stat --format='%n %Y' {} \;)
          upload_list=""
          declare -A server_files
          while IFS= read -r line; do
            file=$(echo $line | cut -d' ' -f1)
            mod_time=$(echo $line | cut -d' ' -f2)
            server_files["$file"]="$mod_time"
          done < server_file_list.txt
          while IFS= read -r line; do
            file=$(echo $line | cut -d' ' -f1)
            mod_time=$(echo $line | cut -d' ' -f2)
            if [[ ! -v "server_files[$file]" ]] || [[ "$mod_time" -gt "${server_files[$file]}" ]]; then
              upload_list+="$file\n"
            fi
          done <<< "$git_files"
          echo -e "$upload_list" > upload_list.txt
          echo "files_to_upload=$(cat upload_list.txt | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Debug Upload List
        run: |
          ls -al
          cat upload_list.txt

      - name: Deploy Updated and New Files
        run: |
          if [[ ! -s upload_list.txt ]]; then
            echo "No files to upload. Skipping deployment."
            exit 0
          fi
          while IFS= read -r file; do
            target_path=$(echo "$file" | sed 's|^backend/||')
            rsync -avz -e "ssh -i ~/.ssh/consoft_ssh_new" "$file" ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }}:/home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}/"$target_path"
          done < upload_list.txt
        shell: bash

        
      - name: Restart Node.js Application
        run: |
          ssh -i ~/.ssh/consoft_ssh_new ${{ secrets.CPANEL_USERNAME }}@${{ secrets.CPANEL_HOST }} << 'EOF'
            source /home/${{ secrets.CPANEL_USERNAME }}/nodevenv/${{ secrets.CPANEL_FOLDER_NAME }}/20/bin/activate
            cd /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}
            cloudlinux-selector restart --json --interpreter nodejs --user ${{ secrets.CPANEL_USERNAME }} --app-root /home/${{ secrets.CPANEL_USERNAME }}/${{ secrets.CPANEL_FOLDER_NAME }}
          EOF
